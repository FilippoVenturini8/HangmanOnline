{
  "openapi": "3.0.3",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/hangman/v0.1.0/games/{lobbyId}": {
      "post": {
        "tags": [
          "games"
        ],
        "description": "Start a new game",
        "operationId": "GameApi::startGame",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "path",
            "description": "The id of the lobby where to start the game",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new game to put in the lobby",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Game"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The provided id corresponds to a lobby, the game is now started and associated to the lobby, nothing is returned."
          },
          "404": {
            "description": "Not found: the provided id corresponds to not existing lobby"
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "games"
        ],
        "description": "Set the word to guess, given the id of the game\u0027s lobby",
        "operationId": "GameApi::setWordToGuess",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The word to guess",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The provided id corresponds to a lobby, the word is set, and it\u0027s encoded version is returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found: the provided id corresponds to not existing lobby"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/hangman/v0.1.0/lobbies/{lobbyId}": {
      "get": {
        "tags": [
          "lobbies"
        ],
        "description": "Put the user corresponding to the nickname passed, in the lobby corresponding to the id passed.",
        "operationId": "LobbyApi::addUserToLobby",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The user\u0027s nickname",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The provided id corresponds to a lobby, the user is now connected to the lobby, nothing is returned"
          },
          "404": {
            "description": "Not found: the provided id corresponds to not existing lobby"
          },
          "409": {
            "description": "Conflict: the lobby is full"
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "lobbies"
        ],
        "description": "Deletes a lobby, given it\u0027s id",
        "operationId": "LobbyApi::deleteLobby",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "path",
            "description": "The id of the lobby to remove",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The provided id corresponds to a lobby, which is thus removed. Nothing is returned"
          },
          "404": {
            "description": "Not found: the provided id corresponds to not existing lobby"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/hangman/v0.1.0/games/attempt/{lobbyId}": {
      "put": {
        "tags": [
          "games"
        ],
        "description": "Try an attept to guess the word, given the game\u0027s lobby id",
        "operationId": "GameApi::setWordToGuess",
        "parameters": [
          {
            "name": "lobbyId",
            "in": "path",
            "description": "Id of the lobby",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The attempt",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The provided id corresponds to a lobby, the attempt is tried and the result of the attempt is returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not found: the provided id corresponds to not existing lobby"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/hangman/v0.1.0/lobbies": {
      "post": {
        "tags": [
          "lobbies"
        ],
        "description": "Create a new Lobby",
        "operationId": "LobbyApi::createLobby",
        "parameters": [],
        "requestBody": {
          "description": "The creator\u0027s nickname",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The nickname provided is correct, the lobby is created and it\u0027s id returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found: the provided nickname corresponds to no known user"
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "lobbies"
        ],
        "description": "Retrieves all lobbies",
        "operationId": "LobbyApi::getAllLobbies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A List containing all the system\u0027s lobbies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lobby"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/hangman/v0.1.0/users": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Connect a new user to the system",
        "operationId": "UserApi::connectUser",
        "parameters": [],
        "requestBody": {
          "description": "The user\u0027s data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The nickname provided is correct, the user is now connected to the system. Nothing is returned."
          },
          "400": {
            "description": "Bad request: the nickname can\u0027t be empty"
          },
          "409": {
            "description": "Conflict: the nickname has already been taken"
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/hangman/v0.1.0/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Gets the data of a user, given it\u0027s nickname.",
        "operationId": "UserApi::findUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Nickname of the user",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The provided nickname corresponds to a user, whose data is thus returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Not found: the provided nickname corresponds to no known user"
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "users"
        ],
        "description": "Deletes a user, given it\u0027s nickname",
        "operationId": "UserApi::disconnectUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The nickname of the user to remove",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The provided nickname corresponds to a user, which is thus removed. Nothing is returned"
          },
          "404": {
            "description": "Not found: the provided nickname corresponds to no known user"
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "Game": {
        "type": "object",
        "properties": {
          "roundWon": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "round": {
            "type": "integer",
            "format": "int32"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "wordToGuess": {
            "type": "string"
          },
          "encodedWordToGuess": {
            "type": "string"
          },
          "attempts": {
            "type": "integer",
            "format": "int32"
          },
          "guesserRoundWon": {
            "type": "boolean"
          },
          "neededExtraRound": {
            "type": "boolean"
          },
          "gameFinished": {
            "type": "boolean"
          }
        },
        "required": [
          "roundWon",
          "round",
          "attempts",
          "guesserRoundWon",
          "neededExtraRound",
          "gameFinished"
        ]
      },
      "Lobby": {
        "type": "object",
        "properties": {
          "full": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "connectedUserNumber": {
            "type": "integer",
            "format": "int32"
          },
          "game": {
            "$ref": "#/components/schemas/Game"
          }
        },
        "required": [
          "full",
          "id",
          "connectedUserNumber"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "nickName": {
            "type": "string"
          },
          "gameRole": {
            "type": "string",
            "enum": [
              "NOT_IN_GAME",
              "CHOOSER",
              "GUESSER"
            ]
          }
        }
      }
    }
  }
}